# Local/private config goes in the include
[include]
        path = ~/.gitconfig.local
[hub]
        protocol = https
[init]
        templatedir = ~/.git_template
[alias]
    promote = !$ZSH/bin/git-promote
    wtf     = !$ZSH/bin/git-wtf
    rank-contributors = !$ZSH/bin/git-rank-contributors
    count   = !git shortlog -sn
    tr  = log            --date=format:'%Y-%m-%d %H:%M:%S' --pretty=format:'%C(yellow)%h%Creset \t%Creset %<(60,trunc)%s \t%Cgreen%<(15)%an%Creset %C(blue)%cd%Creset %Cred %d %Creset'
    trg = log --graph    --date=format:'%Y-%m-%d %H:%M:%S' --pretty=format:'\t\t%C(yellow)%h%Creset %Creset %<(60,trunc)%s \t%Cgreen%<(15)%an%Creset %C(blue)%cd%Creset %Cred %d %Creset'
    tro = log --graph                                      --pretty=format:'\t\t%C(yellow)%h%Creset %Creset %<(90)%s %Cgreen%<(15)%an%Creset %C(blue)%cd%Creset %Cred %d %Creset'
    trc = log --oneline  --date=format:'%Y/%m/%d %H:%M:%S' --pretty=format:'%h [%cd]  <%an> %s  %d '
    re  = reflog         --date=format:'%Y-%m-%d %H:%M:%S' --pretty=format:'%C(yellow)%h%Creset \t%Creset %<(60,trunc)%s \t%Cgreen%<(15)%an%Creset %C(blue)%cd%Creset %Cred %d %Creset'
    co  = checkout
    cb  = git-new-branch
    ci  = commit
    cm  = commit --amend
    ca  = commit -a
    br  = branch
    di  = diff -w --word-diff=color
    dic = diff -w --cached
    dis = "!f(){ cmd=\"git di ${@:1} -- *.sv *.v *.c *.h *.qsys\"; echo $cmd; eval $cmd; };f"
    dn  = diff -w --name-only
    dns = "!f(){ cmd=\"git dn ${@:1} -- *.sv *.v *.c *.h *.qsys\"; echo $cmd; eval $cmd; };f"
    cp  = cherry-pick
    cpn = cherry-pick --no-commit
    stu = status -uno
    modereset = "!f(){ cmd=\"git diff --numstat | awk '{if (($1 == \"0\" && $2 == \"0\") || ($1 == \"-\" && $2 == \"-\")) print $3}' | xargs git checkout HEAD\"; echo $cmd; };f"


[color]
    diff = auto
    status = auto
    branch = auto
    ui = true
[core]
    excludesfile = ~/.gitignore
    editor = vim -c \"set fenc=utf-8\" -c \"let g:committia_open_only_vim_starting=0\"
    autocrlf = input
    safecrlf = false
    quotepath = false
    filemode = true
    attributesfile = ~/.gitattributes
    pager = lv -c
[apply]
    whitespace = nowarn
[mergetool]
    keepBackup = false
[difftool]
    prompt = false
[help]
    autocorrect = 1
[push]
        # See `git help config` (search for push.default)
        # for more information on different options of the below setting.
        #
        # Setting to git 2.0 default to suppress warning message
    default = simple

[gui]
    encoding = utf-8

[url "https://"]
    insteadOf = git://

[filter "Altera-Partition-OFF"]
    clean = sed -e 's/\\(IGNORE_PARTITIONS\\) .*/\\1 ON/'

[filter "qsys_common"]
        #smudge =  perl -0pe 's/(datum\\ssopceditor_expanded\\s*.*\\s*value\\s=)(\\s\".\")/\\1 \"0\"/gm'
        #clean  =  perl -0pe 's/(datum\\ssopceditor_expanded\\s*.*\\s*value\\s=)(\\s\".\")/\\1 \"0\"/gm'
    clean = vi -es /dev/stdin +\":%s// /ge | :%s/\\([^>}]\\)\\n/\\1 /ge | %s/}\\n \\+}/} }/ge | %s/ \\+/ /ge | %s/^\\s\\+/ /ge | %s/^\\(.*sopceditor_expanded.*value\\) = \\\"1\\\"/\\1 = \\\"0\\\"/e\" +%p +q!

#[filter "source_file"]
#        smudge = vim -es /dev/stdin +':norm Go/* Last Commit is "^[o^[$' +',$!git --no-pager log --oneline -1' +':norm Go " */^[2k3J' +:%p +:q!
#        clean  = vim -es /dev/stdin +':$,$g/\\/\\* Last Commit is .*$/d' +:%p +:q!

[rebase]
    autosquash = true
    conflictstyle = diff3
[merge]
    conflictstyle = diff3
