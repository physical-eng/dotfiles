set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-continuum      \
  nhdaly/tmux-better-mouse-mode    \
'
#  christoomey/vim-tmux-navigator   \

set-window-option -g mode-keys vi
################################################################################################################################################
# キーバインドの設定
################################################################################################################################################
unbind C-b
set -g prefix C-Space
bind Space send-prefix

## Smart pane switching with awareness of vim splits
unbind -n C-h
unbind -n C-k
unbind -n C-l
unbind -n C-j

# `C-s` で NAVIGATOR table に切り替え
bind -n C-w switch-client -T NAVIGATOR

# `C-w` が Tmux に喰われてしまうので，2回打つことで Vim に `C-w` を送れるようにして救う
# 使用頻度の高い Window command がある場合は，明示的に `bind -T NAVIGATOR <key> send-keys C-w <key>` すればいい
bind -T NAVIGATOR C-w send-keys C-w

# `bind-key -n` のかわりに `bind -T NAVIGATOR` にする
bind -T NAVIGATOR C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -T NAVIGATOR C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys  C-j  ) || (tmux select-pane -P 'bg=default' && tmux select-pane -D && tmux select-pane -P 'bg=colour233')"
bind -T NAVIGATOR C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys  C-k  ) || (tmux select-pane -P 'bg=default' && tmux select-pane -U && tmux select-pane -P 'bg=colour233')"
bind -T NAVIGATOR C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys  C-l  ) || (tmux select-pane -P 'bg=default' && tmux select-pane -R && tmux select-pane -P 'bg=colour233')"
bind -T NAVIGATOR C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || (tmux select-pane -P 'bg=default' && tmux select-pane -l && tmux select-pane -P 'bg=colour233')"

bind c new-window      -c "#{pane_current_path}" \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \;
bind j split-window -v -c "#{pane_current_path}" \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \;
bind l split-window -h -c "#{pane_current_path}" \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \;

bind Space copy-mode
bind C-Space copy-mode

bind-key -T copy-mode-vi p paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection

# 設定ファイルをリロードする
bind o source-file ~/.tmux.conf \; display "Reloaded!"

# セッションの終了
bind -n C-q kill-session

################################################################################################################################################
# システム設定
################################################################################################################################################
# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# 256色対応
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# ウィンドウ履歴の最大行数
set-option -g history-limit 20000

#通知表示時間
set-option -g display-time 3000

# マウスON
set-option -g mouse on

# キーストロークのディレイを減らす
set -sg escape-time 1

## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on

################################################################################################################################################
# ステータスバー設定
################################################################################################################################################
## 更新間隔を1秒に設定
set-option -g status-interval 1

## 中央寄せ
set-option -g status-justify "centre"

## 位置
set-option -g status-position top

## 色
set-option -g status-bg "colour235"
set-option -g status-fg "colour255"

## 左側表示領域
### 幅
set-option -g status-left-length 70

### フォーマット 
set-option -g status-left "#[fg=colour255]Session: #S #[fg=colour40,bold]#(~/dotfiles/.tmux/git-echo-branch-tmux-current-pane.sh)#[default]"

## 右側表示領域
### 幅
set-option -g status-right-length 60

### 色
set-option -g status-right-fg colour255
set-option -g status-right-bg colour238
### フォーマット 
set-option -g status-right " #h | %m/%d %H:%M:%S"

## 中央ウィンドウステータス
### ウィンドウリスト
#### 色
setw -g window-status-fg colour255
setw -g window-status-bg colour233
setw -g window-status-attr dim

#### フォーマット
set-window-option -g window-status-format " #I: #{pane_current_path} "
 
### カレントウィンドウ
#### 色
setw -g window-status-current-fg colour6
setw -g window-status-current-bg colour232
setw -g window-status-current-attr bright
#### フォーマット
#set-window-option -g window-status-current-format " #I: #{pane_current_path} "

# ペインボーダーの色を設定する
set -g pane-border-fg green
set -g pane-border-bg black

# アクティブなペインを目立たせる
#set -g pane-active-border-fg white
#set -g pane-active-border-bg colour245

# Qで表示されるペインNo.の表示色
set-option -g display-panes-active-colour red
set-option -g display-panes-colour blue

# コマンドラインの色を設定する
set -g message-fg colour235
set -g message-bg colour249
set -g message-attr bright

#
set-window-option -g  main-pane-height 60
set-window-option -g  main-pane-width 220
select-layout main-horizontal

set -g @continuum-restore 'on'

run-shell '~/.tmux/plugins/tpm/tpm'
